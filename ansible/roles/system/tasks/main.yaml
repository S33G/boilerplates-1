- name: Install essential packages # noqa package-latest
  ansible.builtin.apt:
    name: "{{ packages }}"
    state: latest
  become: true

- name: Configure logrotate
  ansible.builtin.include_tasks: logs.yaml

- name: Configure Docker Daemon Path
  ansible.builtin.include_tasks: docker.yaml
  when: "'docker_hosts' in group_names"

- name: Apply secondary disk partitioning
  ansible.builtin.include_tasks: disk.yaml
  when: ansible_facts['devices'] | length > 1

- name: Apply user configurations for {{ ansible_user }}
  ansible.builtin.include_tasks: user.yaml

- name: Set the ZSH_CUSTOM shell var if not present
  ansible.builtin.set_fact:
    zsh_custom: "{{ ansible_env.ZSH_CUSTOM | default('/home/' ~ ansible_user ~ '/.oh-my-zsh/custom', true) }}"

- name: Run ZSH configs
  ansible.builtin.include_role:
    name: gantsign.oh-my-zsh
  vars:
    oh_my_zsh_plugins:
      - git
      - zsh-autosuggestions
      - sudo
    users:
      - username: "{{ ansible_user }}"
        oh_my_zsh:
          theme: bira
          update_mode: auto
          update_frequency: 3
          write_zshrc: true
          plugins:
            - git
            - zsh-autosuggestions
            - zsh-syntax-highlighting
            - sudo
            - z

- name: Clone OMZ plugins if they do not exist or need updates
  ansible.builtin.git:
    repo: "{{ item.repo }}"
    dest: "{{ zsh_custom }}/plugins/{{ item.name }}"
    update: true
  loop: "{{ zsh_plugins }}"
  loop_control:
    label: "{{ item.name }}"

- name: Clone all ZSH settings
  ansible.builtin.get_url:
    url: "https://gist.githubusercontent.com/unix-chkpwd/{{ item.id }}/raw"
    dest: "{{ zsh_custom }}/{{ item.name }}"
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: "0644"
  loop: "{{ zsh_gists }}"
  loop_control:
    label: "{{ item.name }}"

- name: Copy the public SSH key
  ansible.posix.authorized_key:
    user: "{{ ansible_user }}"
    state: present
    key: "{{ ssh_public_key }}"
  become: true

- name: Disable SSH password auth
  ansible.builtin.lineinfile:
    dest: /etc/ssh/sshd_config
    regexp: "^#PasswordAuthentication yes"
    line: "PasswordAuthentication no"
  notify: Restart SSH daemon
  become: true
