---
- name: "Install the essentials on the target"
  hosts: default #* Add this to your inventory file and manually --limit within provisioner
  become: true

  vars:
    ansible_user: "hyoga"
    packages: [zsh,vim,htop,ranger]

  tasks:
    - name: Install essential packages # noqa package-latest
      ansible.builtin.apt:
        name: "{{ packages }}"
        state: latest

    - name: Set permissions for the home directory
      ansible.builtin.file:
        path: "/home/{{ ansible_user }}"
        state: directory
        mode: 0755
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"
        recurse: false

    - name: Allow sudo group to have passwordless sudo
      ansible.builtin.lineinfile:
        path: /etc/sudoers
        state: present
        regexp: '^%sudo'
        line: '%sudo ALL=(ALL) NOPASSWD: ALL'
        validate: '/usr/sbin/visudo -cf %s'

    - name: Set the ZSH_CUSTOM shell var if not present
      ansible.builtin.set_fact:
        zsh_custom: "{{ ansible_env.ZSH_CUSTOM | default('/home/' ~ ansible_user ~ '/.oh-my-zsh/custom', true) }}"

    - name: Run ZSH configs
      ansible.builtin.include_role:
        name: gantsign.oh-my-zsh
      vars:
        oh_my_zsh_plugins:
          - git
          - zsh-autosuggestions
          - sudo
        users:
          - username: "{{ ansible_user }}"
            oh_my_zsh:
              theme: bira
              update_mode: auto
              update_frequency: 3
              write_zshrc: true
              plugins:
                - git
                - zsh-autosuggestions
                - sudo

    - name: Clone a zsh-autosuggestions repo
      ansible.builtin.git:
        repo: https://github.com/zsh-users/zsh-autosuggestions
        dest: "{{ zsh_custom }}/plugins/zsh-autosuggestions"

    - name: Clone a zsh-syntax-highlighting repo
      ansible.builtin.git:
        repo: https://github.com/zsh-users/zsh-syntax-highlighting.git
        dest: "{{ zsh_custom }}/plugins/zsh-syntax-highlighting"

    - name: Copy the public SSH key
      ansible.posix.authorized_key:
        user: "{{ ansible_user }}"
        state: present
        key: "ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIBK2VnKgOX7i1ISETheqjAO3/xo6D9n7QbWyfDAPsXwa crypto"
      become: true

    - name: Disable SSH password auth
      ansible.builtin.lineinfile:
        dest: /etc/ssh/sshd_config
        regexp: "^#PasswordAuthentication yes"
        line: "PasswordAuthentication no"

    - name: Logrotate setup
      ansible.builtin.include_role:
        name: arillso.logrotate
      vars:
        logrotate_global_config: false
        logrotate_applications:
          - name: rsyslog
            definitions:
              - logs:
                  - /var/log/*.log
                options:
                  - daily
                  - size 20M
                  - missingok
                  - rotate 10
                  - compress
                  - delaycompress
                  - notifempty
                  - create 640 root adm
                  - sharedscripts